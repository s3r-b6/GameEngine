#pragma once

#include "./engine_global.h"
#include "./types.h"

static u16 room1[] = {
    404, 405,     405,     0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       406,     404,     405,     405, 0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       406,     404,     0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       406, 404,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       406,     404,     0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   406,     404,     0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       406,     404, 0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       406,     404,     0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    406, 404,     0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       406,     404,     0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       406,     404,     0,       0,       0,       0,       0,   0,
    0,   MAX_U16, MAX_U16, MAX_U16, MAX_U16, MAX_U16, MAX_U16, MAX_U16, MAX_U16, 0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   406,
    404, 0,       0,       0,       0,       0,       0,       0,       282,     283, 283,
    283, 283,     283,     283,     284,     0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       406,     404,     0,       0,   0,
    0,   0,       0,       0,       282,     283,     283,     283,     283,     283, 283,
    284, 0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       406,     404,     0,       0,       0,       0,       0,       0,   405,
    282, 283,     283,     283,     283,     283,     283,     284,     0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       406, 404,
    0,   0,       0,       0,       0,       0,       405,     283,     40,      283, 40,
    283, 283,     283,     MAX_U16, 0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       406,     404,     0,       0,       0,   0,
    0,   0,       0,       MAX_U16, 283,     283,     283,     283,     283,     283, 0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   406,     404,     0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       MAX_U16, MAX_U16, 0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       406,     404, 0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       406,     404,     0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    406, 404,     0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       0,       0,       0,   0,
    0,   0,       0,       0,       0,       0,       0,       406,     444,     445, 445,
    445, 445,     445,     445,     445,     445,     445,     445,     445,     445, 445,
    445, 445,     445,     445,     445,     445,     445,     445,     445,     445, 445,
    445, 445,     445,     445,     445,     445,     445,     445,     445,     445, 445,
    445, 445,     445,     446,     524,     524,     524,     524,     524,     524, 524,
    525, 526,     526,     526,     526,     526,     526,     526,     526,     526, 526,
    526, 526,     526,     526,     526,     526,     526,     526,     526,     526, 526,
    526, 526,     526,     526,     526,     526,     526,     526,     526,     526, 526,
    564, 564,     564,     564,     564,     564,     564,     565,     566,     566, 566,
    566, 566,     566,     566,     566,     566,     566,     566,     566,     566, 566,
    566, 566,     566,     566,     566,     566,     566,     566,     566,     526, 566,
    566, 566,     566,     566,     566,     566,     566};

TileID *loadRoom(BumpAllocator *bumpAlloc) {
    TileID *room = (TileID *)bumpAlloc->alloc(sizeof(TileID) * CHUNK_SIZE_x * CHUNK_SIZE_y);
    for (size_t i = 0; i < CHUNK_SIZE_x * CHUNK_SIZE_y; ++i) {
        room[i] = room1[i];
    }

    return room;
}
